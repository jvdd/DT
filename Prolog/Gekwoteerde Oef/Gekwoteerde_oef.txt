% OPDRACHT 1: max_overeenkomst/4


max_overeenkomst(StringLijst1, StringLijst2, Match, Len) :-
    vindMatch(StringLijst1, StringLijst2, StringMatches),
    sort(StringMatches, SortedStringMatches),
    last(SortedStringMatches, (Len, UnRevMatch)),
    reverse(UnRevMatch, Match).

vindMatch(StringLijst1, StringLijst2, StringMatches) :-
    vindMatch(StringLijst1, StringLijst2, StringLijst2, [], StringMatches).

vindMatch([], _, _, StringMatches, StringMatches) :- !.
vindMatch([X|Rest], StringLijst2, OrigStringLijst2, Acc, StringMatches) :-
    (
    member(X, StringLijst2) ->
        vindRestLijst2(X, StringLijst2, RestLijst2),
        vindRestStringMatch([X|Rest], [X|RestLijst2], String),
        length(String, Len),
        vindMatch([X|Rest], RestLijst2, OrigStringLijst2, [(Len, String)|Acc], StringMatches)
    ;
        vindMatch(Rest, OrigStringLijst2, OrigStringLijst2, Acc, StringMatches)
    ).

vindRestLijst2(X, [X|Rest], Rest) :- !.
vindRestLijst2(X, [_|Rest], RestLijst2) :-
    vindRestLijst2(X, Rest, RestLijst2).

vindRestStringMatch([X|Rest1], [X|Rest2], String) :-
    vindRestStringMatch(Rest1, Rest2, [X], String).

vindRestStringMatch([W1|_], [W2|_], String, String) :-
    W1 \= W2.
vindRestStringMatch([W|Rest1], [W|Rest2], Acc, String) :-
    vindRestStringMatch(Rest1, Rest2, [W|Acc], String).







% OPDRACHT 2: keigraaf/2


% TESTDATA
boog(a, b).
boog(b, c).
boog(a, c).

heeftkeien(a, 5).
heeftkeien(b, 3).
heeftkeien(c, 2).


herhalend(Configuratie, Lengte) :-
    vindAlleKnopen(AlleKnopen),
    initConfiguratie(AlleKnopen, InitConfiguratie),
    sort(InitConfiguratie, SortedInitConfiguratie),
    vindPeriode(AlleKnopen, [SortedInitConfiguratie], Configuratie, Lengte).

vindAlleKnopen(AlleKnopen) :-
    findall(Knoop, heeftkeien(Knoop, _), AlleKnopen).

initConfiguratie([], []) :- !.
initConfiguratie([Knoop|Rest], [(Knoop, AantalKeien)|RestLijst]) :-
    heeftkeien(Knoop, AantalKeien),
    initConfiguratie(Rest, RestLijst).

vindPeriode(AlleKnopen, [VorigeConfiguratie|Acc], Herhaling, Lengte) :-
    initVolgendeKeiGraaf(AlleKnopen, InitVolgendeKeiGraaf),
    volgendeKeiGraaf(AlleKnopen, VorigeConfiguratie, InitVolgendeKeiGraaf, VolgendeConfiguratie),
    sort(VolgendeConfiguratie, SortedVolgendeConfiguratie),
    (member(SortedVolgendeConfiguratie, [VorigeConfiguratie|Acc]) ->
        Herhaling = SortedVolgendeConfiguratie,
        vindLengte(Herhaling, Acc, Lengte)
    ;
        vindPeriode(AlleKnopen, [SortedVolgendeConfiguratie|[VorigeConfiguratie|Acc]], Herhaling, Lengte)
    ).

initVolgendeKeiGraaf([], []) :- !.
initVolgendeKeiGraaf([Knoop|Rest], [(Knoop, 0)|RestLijst]) :-
    heeftkeien(Knoop, _),
    initVolgendeKeiGraaf(Rest, RestLijst).

volgendeKeiGraaf([], _, VolgendeConfiguratie, VolgendeConfiguratie) :- !.
volgendeKeiGraaf([Knoop|Rest], Configuratie, Acc, VolgendeConfiguratie) :-
    vindAlleBuren(Knoop, AlleBuren),
    length(AlleBuren, AantalBuren),
    aantalKeienInConfiguratie(Knoop, Configuratie, AantalKeien),
    VerdeelAantal is AantalKeien // AantalBuren,
    NietVerdeeldAantal is AantalKeien mod AantalBuren,
    updateConfiguratie(Knoop, VerdeelAantal, NietVerdeeldAantal, Acc, UpdatedAcc),
    volgendeKeiGraaf(Rest, Configuratie, UpdatedAcc, VolgendeConfiguratie).

vindAlleBuren(Knoop, AlleBuren) :-
    findall(X, (boog(Knoop,X); boog(X, Knoop)), AlleburenUnsorted),
    sort(AlleburenUnsorted, AlleBuren). % Dubbele waarden vermijden

aantalKeienInConfiguratie(Knoop, [(Knoop,AantalKeien)|_], AantalKeien) :- !.
aantalKeienInConfiguratie(Knoop, [_|Rest], AantalKeien) :-
    aantalKeienInConfiguratie(Knoop, Rest, AantalKeien).

updateConfiguratie(_, _, _, [], []) :- !.
updateConfiguratie(Knoop, VerdeelAantal, NietVerdeeldAantal, [(Knoop, Aantal)|Rest1], [(Knoop, NieuwAantal)|Rest2]) :-
    !,
    NieuwAantal is Aantal + NietVerdeeldAantal,
    updateConfiguratie(Knoop, VerdeelAantal, NietVerdeeldAantal, Rest1, Rest2).
updateConfiguratie(Knoop, VerdeelAantal, NietVerdeeldAantal, [(AndereKnoop, Aantal)|Rest1], [(AndereKnoop, NieuwAantal)|Rest2]) :-
    NieuwAantal is Aantal + VerdeelAantal,
    updateConfiguratie(Knoop, VerdeelAantal, NietVerdeeldAantal, Rest1, Rest2).

vindLengte(Herhaling, VorigeKeigrafenLijst, Lengte) :-
    reverse(VorigeKeigrafenLijst, RevVorigeKeigrafenLijst),
    vindLengte(Herhaling, RevVorigeKeigrafenLijst, 1, Lengte).

vindLengte(Herhaling, [Herhaling|_], Lengte, Lengte) :- !.
vindLengte(Herhaling, [_|Rest], Acc, Lengte) :-
    NewAcc is Acc + 1,
    vindLengte(Herhaling, Rest, NewAcc, Lengte).
